== README

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.

== Commands
mysql -u root -p
CREATE DATABASE simple_cms_development;
CREATE DATABASE simple_cms_test;

GRANT ALL PRIVILEGES ON simple_cms_development.* TO 'rails_user'@'localhost' IDENTIFIED BY 'secretpassword';

GRANT ALL PRIVILEGES ON simple_cms_test.* TO 'rails_user'@'localhost' IDENTIFIED BY 'secretpassword';

-- Set the pasword in database.yml

rails db:schema:dump
-- Get all the data

rails generate
-- template file

rails generate controller

rails generate controller demo index
app>demo_controller.rb

== Route Types
Simple Route
Default Route
Root Route
Resourceful Routes

== Simple Match Route ==
get "demo/index"

math "demo/index"
:to => "demo#index"
:via => :get

== Default Route ==
get ':controller(/:action(/:id))'
match ':controller(/:action(/:id))
:via => :get

# get ':controller(/:action(/:id))'

== Root Route ==
root 'demo#index'

rails generate controller demo index

== Redirect
   redirect_to(:action => 'index')
   
Instance Variables

variables

@Instance_variable

# Controller need to set it up before go in to the view

Rails Links
<%= link_to(text, target) %>
# target like "demo/index"

<%= link_to('Hello Page', {:action => 'hello'}) %>

Link with Parameters
<%= link_to('Hello Page with params', {:action => 'hello', :page => 5, :id => 20}) %>
# http://localhost:3000/demo/hello?id=20&page=5

  get ':controller(/:action(/:id))'
http://localhost:3000/demo/hello?id=20&page=5

== Databases ==
SHOW DATABASES;
CREATE DATABASE db_name;
USE db_name;
DROP DATABASE db_name;

GRANT ALL PRIVILEGES ON simple_cms_development.* TO 'rails_user'@'localhost' IDENTIFIED BY 'secretpassword';

SHOW GRANTS FOR 'username'@'localhost';

== Migrations ==
= Generate Migrations
rails generate migration MagrationName
# create    db/migrate/20231105115111_do_nothing_yet.rb
= Generate Model
rails generate model ModelName

Table Column Options
:limit => size
:default => value
:null => true/false
:precision => number
:scale => number

== Run a Migration ==
rails db:migrate

SHOW TABLES;
SHOW FIELDS FROM users;
SHOW FIELDS FROM schema_migrations;
SELECT * FROM schema_migrations;

rails db:migrate VERSION=0; #undo all migrations
rails db:migrate:status

== Run Migrations ==
rails db:migrate
rails db:migrate VERSION=0
rails db:migrate VERSION=20231105115646
rails db:migrate:status
rails db:migrate:up VERSION=20231105115646
rails db:migrate:down VERSION=20231105115646
rails db:migrate:redo VERSION=20231105115646

== Table Migration Methods == 
create_table(table, options) do |t|
...columns...
end

drop_table(table)

rename_table(table, new_name)

== Column Migration Methods ==
add_column(table, column, type, options)
remove_column(table, column)
rename_column(table, column, new_name)
change_column(table, column, type, options)

== Index Migration Methods ==
add_index(table, column, option)
remove_index(table, column)

== Index Migration Method Options ==
:unique => true/false
:name => "your_custom_name

= 4. Database Migration ==
== Solutions
rails generate model Subject
rails generate model Page
rails generate model Section


== 5. Models and ActiveRecord ==
== ActiveRecord Example

use = User.new
user.first_name = "Lenard"
user.save # SQL INSERT

user.last_name = "Agbalo"
user.save # SQL Update

user.delete # SQL Delete

ActiveRelation Example
users = User.where(:first_name => "Lenard")
user = user.order("last_name ASC").limit(5)

== Generating Model
rails generate model SingularName
rails generate model Subject

Create file in db/migrate
File name : 20160450123_create_subject.rb
Class name: CreateSubjects

Create file in app/Model
File name: subject.rb
Class name: Subject

== Rails Console ==

= Create
subject = Subject.new
subject.new_record? # Not been saved in database
subject.name = "First Subject"
subject = Subject.new(:name => "First SUbject", :position => 1, :visible => true)
subject.save

if subject.save
puts "Saved!"
else
puts "Not saved!"
end

subject = Subject.create(:name => 'Second Page', :position => 2)
# Auto Commit

= Update
subject = Subject.find(1)
subject.name = "Initial Subject"
subject.save

subject = Subject.find(2)
subject.update_attributes(:name => 'Next Subject', :visible => false)

= Delete
subject = Subject.find(3)
subject.destroy

= Find Record
Subject.find(2)
# Returns an object or an error

= Dynamic Finders
Subject.find_by_id(2)
Subject.find_by_na,e("First Subject)
# Return an object or nil

Subject.all
# Return array

= First and Last
Subject.first
Subject.last
Return an object or nill

= Condition
# Where Condition
Subject.where(:visible => true)

subjects.class
 => Subject::ActiveRecord_Relation
 subjects.to_sql

 subject = Subject.where(["visible = ?", true])

subject = Subject.limit(5)

-- model>subject.rb
class Subject < ApplicationRecord
  scope :visible, -> { where(visible: true) }
  scope :invisible, -> { where(visible: false) }
  scope :sorted, -> { order(created_at: :desc) }
  scope :search, ->(query) { where("name LIKE ?", "%#{query}%") }
end
-- rails c
Subject.visible
Subject.search("Initial")


== 6 Associations ==

rails generate migration CreateAdminUsersPagesJoin


rails generate controller Subject index show new edit delete

= Rest =

7. Crud Rest and Resourceful Route

8. Controllers and CRUD

rails generate controller Pages index show new edit delete

rails generate controller Sections index show new edit delete


9. Layouts, Partials, and View Helpers

Many-to-many association: Simple

mysql -u rails_user -p simple_cms_development